package uk.ac.liv.ffmpeg.libavcodec.mjpeg;

import uk.ac.liv.ffmpeg.libavcodec.PutBitContext;
import uk.ac.liv.ffmpeg.libavcodec.PutBits;

public class Mjpeg {
	

	/* Set up the standard Huffman tables (cf. JPEG standard section K.3) */
	/* IMPORTANT: these are only valid for 8-bit data precision! */
	public static final int [] ff_mjpeg_bits_dc_luminance =
	{ /* 0-base */ 0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 };
	
	public static final int [] ff_mjpeg_val_dc =
	{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 };

	public static final int [] ff_mjpeg_bits_dc_chrominance =
	{ /* 0-base */ 0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 };

	public static final int [] ff_mjpeg_bits_ac_luminance =
	{ /* 0-base */ 0, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 0x7d };
	
	public static final int [] ff_mjpeg_val_ac_luminance =
	{ 0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12,
	  0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07,
	  0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08,
	  0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0,
	  0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16,
	  0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28,
	  0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,
	  0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49,
	  0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59,
	  0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69,
	  0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79,
	  0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89,
	  0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98,
	  0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,
	  0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6,
	  0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5,
	  0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4,
	  0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2,
	  0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea,
	  0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,
	  0xf9, 0xfa
	};

	public static final int [] ff_mjpeg_bits_ac_chrominance =
	{ /* 0-base */ 0, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 0x77 };

	public static final int [] ff_mjpeg_val_ac_chrominance =
	{ 0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21,
	  0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71,
	  0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91,
	  0xa1, 0xb1, 0xc1, 0x09, 0x23, 0x33, 0x52, 0xf0,
	  0x15, 0x62, 0x72, 0xd1, 0x0a, 0x16, 0x24, 0x34,
	  0xe1, 0x25, 0xf1, 0x17, 0x18, 0x19, 0x1a, 0x26,
	  0x27, 0x28, 0x29, 0x2a, 0x35, 0x36, 0x37, 0x38,
	  0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,
	  0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,
	  0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
	  0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78,
	  0x79, 0x7a, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
	  0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96,
	  0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5,
	  0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4,
	  0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3,
	  0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2,
	  0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda,
	  0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9,
	  0xea, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,
	  0xf9, 0xfa
	};

	/* start of frame */

	public static final int SOF0 = 0xc0;       /* baseline */
	public static final int SOF1  = 0xc1;       /* extended sequential, huffman */
	public static final int SOF2  = 0xc2;       /* progressive, huffman */
	public static final int SOF3  = 0xc3;       /* lossless, huffman */

	public static final int SOF5  = 0xc5;       /* differential sequential, huffman */
	public static final int SOF6  = 0xc6;       /* differential progressive, huffman */
	public static final int SOF7  = 0xc7;       /* differential lossless, huffman */
	public static final int JPG   = 0xc8;       /* reserved for JPEG extension */
	public static final int SOF9  = 0xc9;       /* extended sequential, arithmetic */
	public static final int SOF10 = 0xca;       /* progressive, arithmetic */
	public static final int SOF11 = 0xcb;       /* lossless, arithmetic */

	public static final int SOF13 = 0xcd;       /* differential sequential, arithmetic */
	public static final int SOF14 = 0xce;       /* differential progressive, arithmetic */
	public static final int SOF15 = 0xcf;       /* differential lossless, arithmetic */

	public static final int DHT   = 0xc4;       /* define huffman tables */

	public static final int DAC   = 0xcc;       /* define arithmetic-coding conditioning */

    /* restart with modulo 8 count "m" */
	public static final int RST0  = 0xd0;
	public static final int RST1  = 0xd1;
	public static final int RST2  = 0xd2;
	public static final int RST3  = 0xd3;
	public static final int RST4  = 0xd4;
	public static final int RST5  = 0xd5;
	public static final int RST6  = 0xd6;
	public static final int RST7  = 0xd7;

	public static final int SOI   = 0xd8;       /* start of image */
	public static final int EOI   = 0xd9;       /* end of image */
	public static final int SOS   = 0xda;       /* start of scan */
	public static final int DQT   = 0xdb;       /* define quantization tables */
	public static final int DNL   = 0xdc;       /* define number of lines */
	public static final int DRI   = 0xdd;       /* define restart interval */
	public static final int DHP   = 0xde;       /* define hierarchical progression */
	public static final int EXP   = 0xdf;       /* expand reference components */

	public static final int APP0  = 0xe0;
	public static final int APP1  = 0xe1;
	public static final int APP2  = 0xe2;
	public static final int APP3  = 0xe3;
	public static final int APP4  = 0xe4;
	public static final int APP5  = 0xe5;
	public static final int APP6  = 0xe6;
	public static final int APP7  = 0xe7;
	public static final int APP8  = 0xe8;
	public static final int APP9  = 0xe9;
	public static final int APP10 = 0xea;
	public static final int APP11 = 0xeb;
	public static final int APP12 = 0xec;
	public static final int APP13 = 0xed;
	public static final int APP14 = 0xee;
	public static final int APP15 = 0xef;

	public static final int JPG0  = 0xf0;
	public static final int JPG1  = 0xf1;
	public static final int JPG2  = 0xf2;
	public static final int JPG3  = 0xf3;
	public static final int JPG4  = 0xf4;
	public static final int JPG5  = 0xf5;
	public static final int JPG6  = 0xf6;
	public static final int SOF48 = 0xf7;       ///< JPEG-LS
	public static final int LSE   = 0xf8;       ///< JPEG-LS extension parameters
	public static final int JPG9  = 0xf9;
	public static final int JPG10 = 0xfa;
	public static final int JPG11 = 0xfb;
	public static final int JPG12 = 0xfc;
	public static final int JPG13 = 0xfd;

	public static final int COM   = 0xfe;       /* comment */

	public static final int TEM   = 0x01;       /* temporary private use for arithmetic coding */
    /* 0x02 -> 0xbf reserved */

	/* isn't this function nicer than the one in the libjpeg ? */
	public static void ff_mjpeg_build_huffman_codes(int[] huff_size,
			int[] huff_code, int[] bits_table,
			int[] val_table) {
	    int i, j, k,nb, code, sym;

	    code = 0;
	    k = 0;
	    for(i = 1 ; i <= 16 ; i++) {
	        nb = bits_table[i];
	        for(j = 0 ; j < nb ; j++) {
	            sym = val_table[k++];
	            huff_size[sym] = i;
	            huff_code[sym] = code;
	            code++;
	        }
	        code <<= 1;
	    }
	}

	public static void put_marker(PutBitContext p, int code) {
	    PutBits.put_bits(p, 8, 0xff);
	    PutBits.put_bits(p, 8, code);		
	}

}
